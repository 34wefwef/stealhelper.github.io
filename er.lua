--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi)local bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=123,51,77,68,41,46,96,34,53,56,26,41,16,12,49,14,27,81,34,68,89,71,74,70,80,14,69,70,67,95,33,29,22,78,43,67,92,49,19,96,76,29,23,31,42,22,21,38,24,64,69 while bi~=74 do if bj>=729 then if bj>=1050 then if bj<=1163 then if bj<=1070 then if bj<1062 then cj=function()local cx,cy cy,cx=bs(bk,bq,(bq+2))bq=(bq+2);return((cx*256)+cy);end bj=1070 else bj=1101 bn=function()local cx,cy,cz,da,db,dc,dd,de=59,31,57,60,44,73,66,30,10,21,58,67,23,10,51,74,81,24 while cx~=41 do if cy>=191 then if cy>=313 then if cy<=313 then if not(da~=0)then if 0~=de then do da=1 end dc=0 else return(dd*0)end elseif 2047~=da then else if not(de~=0)then do return(dd*(0/0))end else do return(dd*(1/0))end end end cy=356 else if cy<385 then cy=389 return(dd*(2^(da-1023))*(de/ca+dc))else break end end else if cy<=191 then cy=228 do da=cs(20,cz,11)end else if cy>236 then cy=313 dc=1 else cy=273 de=(cs(0,cz,20)*4294967296+db)end end end else if cy<=62 then if cy>36 then cy=97 db=cd()else cz,da,db,dc,dd,de=nil cy=62 end else if cy>=129 then if cy<156 then cy=161 do if((db==0 and cz==0))then return 0 end end else dd=((-1)^cs(31,cz,1))cy=191 end else cy=129 cz=cd()end end end end end end else if bj<=1101 then bj=1120 cu=function(cx,cx,cx)local cx,cy,cz,da=44,49,38,92,29,86,51,29,43,97,57,56 while cx~=31 do if cy>=157 then if cy<=157 then cy=173 do bq=(bq+cz);end else if cy<215 then cy=219 return da;else cx=31;end end else if cy<=49 then cz,da=nil cy=83 else if cy<126 then cy=132 cz=cd()else da=bk:sub(bq,(bq+cz-1))cy=157 end end end end end else if bj<1158 then bj=1163 do cn=function(...)do return{...},by('#',...)end end end else bj=1210 cv={}end end end else if bj<=1261 then if bj>=1237 then if bj>1246 then do bx={}end bj=1289 else cm={}bj=1261 end else bj=1237 bm=function(cx,cy,cy,cy)local cy,cz,da,db,dc,dd,de,df=61,68,81,42,79,72,70,79,19,70,30,80,20,75,34,28,28,18,26,55,45,78,54,70,90,74 while cy~=45 do if cz<=262 then if cz>=204 then if cz>=246 then if cz<259 then cz=262 do df[89]=ci();end else cz=292 for dg=1,cd()do local dh,di,dj,dk,dl,dm=86,60,45,76,65,42,61,83,97,40,61,53,40,45,63,59,17,53,62,58,43,97,51,52,32,12,77 while dh~=49 do if di<=362 then if di>=205 then if di<=252 then if di>209 then di=277 dm=cd()else if 1==ci()then for dh=1,ci()do dl[107][dh]={ci()==0,cd()}end end di=252 end else if di>=316 then if di>319 then dl[7]=dk di=397 else di=362 dk=cr(dm,1,2)end else di=316 dj=cd()end end else if di<=77 then if di>64 then dl={{},nil,nil}di=120 else dj,dk,dl,dm=nil di=77 end else if di<165 then dl[158]=ci();di=169 else di=205 do dl[107]={};end end end end else if di>=516 then if di<=565 then if di<563 then di=565 dl[32]=cr(dm,12,20);else di=590 dl[34]=-dl[92]end else if di>=618 then if di<635 then di=639 dd[dg]=dl;else break end else di=618 dl[101]=-dl[90]end end else if di<=443 then if di>400 then do dl[92]=cr(dm,3,11);end di=469 else dl[179]=cr(dj,1,11);di=443 end else if di>476 then di=516 dl[90]=cr(dm,21,29);else dl[162]=cr(dj,w,33);di=497 end end end end end end end else if cz>211 then for w=(#cv+1),(#cv+de)do local dg,dh,di,dj,dk=79,44,16,83,23,65,65,23,34,35,63,92,31,68,39,56,32,86,23,46,95,66,65 while dg~=46 do if dh>=295 then if dh<=389 then if dh>=371 then if dh>374 then dh=412 dj[162]=cr(di,12,33);else do dj[90]=cr(dk,21,29);end dh=389 end else if dh<331 then dh=340 dj[92]=cr(dk,3,11);else do dj[115]=cr(dk,12,20);end dh=371 end end else if dh>=477 then if dh>485 then dg=46;else dh=509 cv[w]=dj;end else if dh<453 then do dj[34]=-dj[e]end dh=460 else dj[101]=-dj[90]dh=477 end end end else if dh<=145 then if dh>=105 then if dh>113 then dh=184 dk=cd()else dh=145 dj[158]=ci();end else if dh<64 then di,dj,dk=nil dh=68 else dj={}dh=105 end end else if dh<=216 then if dh<212 then dh=216 di=cd()else dh=233 dj[32]=ci();end else if dh<277 then dh=279 dj[7]=cr(dk,1,2);else dj[179]=cr(di,1,11);dh=295 end end end end end end cz=246 else cz=223 de=cd()end end else if cz<=103 then if cz>71 then cz=138 dd={}else da,db,dc,dd,de,df=nil cz=103 end else if cz>147 then do df={}end cz=204 else cz=157 da={}end end end else if cz<=408 then if cz>=382 then if cz>391 then cz=439 do for e=1,dc do local w,de,dg,dh=63,60,90,98,64,17,37,78,46,13,93,20 while w~=33 do if de>=175 then if de<=175 then if(3==dg)then dh=(0~=ci());elseif(not(dg~=0))then dh=bn();elseif(2==dg)then dh=cu();elseif(1==dg)then dh=cx[cu()];end;de=224 else if de<248 then de=257 db[e]=dh;else w=33;end end else if de<=60 then de=92 dg,dh=nil else if de<118 then de=127 do dg=ci()end else dh=nil de=175 end end end end end end else db={}cz=408 end else if cz>297 then dc=cd()cz=382 else cz=338 df[54]=dd;end end else if cz>=503 then if cz<=503 then df[78]=da;cz=529 else if cz>533 then cy=45;else cz=572 return df;end end else if cz>443 then cz=503 do for e=1,cd()do da[e-1]=bm();end end else cz=481 df[165]=db end end end end end end end else if bj>=1332 then if bj>1336 then bi=74;else bj=1381 return ch(bm(bo()),{},bo())();end else bj=1332 ch=function(e,w,bi,cx,cx)local cx,cy,cz,da,db db=e[78]cy=e[54]cx=e[165]cz=cm da=e[89]return function(...)local e,cz,dc,dd,de,df,dg,dh,di do dd=1 end dc=-1 do di=-1 end do dg={}end e={...}do cz=(by('#',...)-1)end df={}de={}for di=0,cz do if(not(di<da))then dg[(di-da)]=e[(di+1)];else do de[di]=e[(di+1)];end end;end;dh=(cz-da+1)do while true do local e,cz,da,dg,dh,di,dj,dk,dl,dm cz=cy[dd]dl=cz[179]dj=cz[158]e=cz[92]dg=cz[115]dk=cz[90]da=cz[32]do dm=cz[34]end di=cz[162]dh=cz[101]if not(dl>33)then do if not(dl<17)then do if not(dl<25)then do if not(dl<29)then do if not(cz[be]>30)then if(dl>29)then cy[dd]={[32]=0,[179]=dl- -10,[162]=10,[90]=p,[92]=15};dd=(dd-1);else local p p=e de[p]=de[p](bu(de,p+1,dc));end else if not(dl<32)then if not(dl~=32)then local p p=e de[p](bu(de,(p+1),di))else local p,be,dj,dm do be=e end dj,dm=cn(de[be](bu(de,(be+1),di)))dc=(dm+be-m)p=0 for m=be,dc do p=(p+1);de[m]=dj[p];end;end else cy[dd]={[90]=42,[n]=dl- -26,[162]=27,[32]=0,[92]=14};dd=(dd-1);end end end else if not(dl<27)then if not(dl~=27)then dd=((cx[e]<cx[dk])and di or dd)else cy[dd]=cv[da];do dd=di;end end else if(dl>25)then de[e]=(de[di]+de[cz[90]]);else de[e]=(de[di]+cx[dk]);end end end end else if not(dl>20)then if not(dl<19)then if not(dl~=19)then de[e]=w[cz[162]];else while(de[cz[92]]==cx[cz[q]])do dd=di;break end end else do if(dl<18)then w[di]=de[e];else local m,n do m=cz[162]end n=de[m]for p=(m+1),dk do n=(n..de[p]);end;de[e]=n;end end end else if not(dl>22)then do if o==dl then do de[e]();end else local m,n,o,p,q m=e n=dk o=(m+2)do p={de[m](de[m+1],de[o])}end do for be=1,n do de[(o+be)]=p[be]end end q=de[(m+3)]if q then do de[o]=q end else dd=cz[162];end;end end else if(dl>23)then do de[e]=(de[di]%cx[dk]);end else cx=cm[e](cx)end end end end end else if not(dl<8)then if not(dl>11)then if not(cz[179]>9)then if 8==dl then cy[dd]={[162]=11,[32]=0,[90]=2,[92]=9,[179]=dl- -41};dd=(dd-1);else cy[dd]={[92]=13,[179]=dl- -37,[90]=17,[32]=0,[162]=13};dd=(dd-1);end else if(dl>10)then cy[dd]={[92]=6,[179]=cz[179]-4,[162]=7,[90]=0,[32]=0};dd=(dd-1);else do return de[e]end end end else if not(dl>13)then if(cz[179]>12)then cy[dd]={[32]=0,[bh]=13,[162]=73,[90]=74,[179]=dl- -28};do dd=(dd-1);end else if((de[cz[92]]<cx[dk]))then dd=di;end;end else if not(dl<15)then if(dl>15)then if((de[e]<de[dk]))then do dd=di;end end;else if de[e]then dd=di;end;end else cy[dd]={[179]=dl- -43,[92]=3,[32]=0,[90]=59,[162]=10};dd=(dd-1);end end end else if not(dl<4)then if not(dl>5)then do if not(dl~=4)then for m=e,di do de[m]=nil;end;else de[e]=(0~=cz[162]);end end else if(cz[179]>6)then local m,n,o,p p=e n,m=cn(de[p](de[(p+1)]))dc=(m+p-1)o=0 for m=p,dc do o=(o+1);do de[m]=n[o];end end;else if not de[e]then dd=di;end;end end else if not(cz[179]>1)then do if(dl<1)then cy[dd]={[92]=17,[179]=dl- -57,[90]=58,[32]=0,[162]=31};dd=(dd-1);else do de[e][cx[di]]=de[cz[90]];end end end else if(dl<3)then local m do m=cz[92]end de[m]=de[m](de[m+1]);else local m,n,o o=e m=de[(o+2)]n=(de[o]+m)de[o]=n;do if((m>0))then if(not(n>de[o+1]))then dd=di;de[(o+3)]=n;end elseif(not(n<de[o+1]))then dd=di;de[(o+3)]=n;end end end end end end end end else do if not(dl>50)then do if not(dl<42)then if not(dl<46)then if not(dl<48)then if not(dl>48)then de[cz[92]]=ch(db[di],nil,bi);else do if 49==dl then local m m=e de[m]=de[m](bu(de,m+1,cz[162]));else local m,n,o do o=cz[92]end m=de[o]n=de[(o+2)]if((n>v))then if((m>de[o+1]))then dd=di;else do de[(o+3)]=m;end end elseif((m<de[o+1]))then do dd=di;end else de[(o+3)]=m;end end end end else if not(dl~=46)then do de[e]=de[cz[162]][cx[dk]];end else de[e]=(de[di]*cx[dk]);end end else if not(dl<44)then do if not(dl~=44)then local m,n n=e m=de[di]do de[(n+1)]=m;end de[n]=m[cx[dk]];else de[cz[92]]={};end end else do if(dl<43)then de[e]=(de[di]*de[dk]);else cy[dd]={[162]=11,[179]=dl- -3,[32]=0,[90]=17,[92]=11};dd=(dd-1);end end end end else if not(dl<38)then if not(dl<40)then if 40==dl then de[e]=de[di];else de[e][cx[di]]=cx[dk];end else if(dl<39)then do de[e][de[di]]=de[cz[90]];end else de[e]=(de[di]-de[dk]);end end else if not(dl<36)then if(dl<37)then de[e]=de[di][de[dk]];else local m,n n=e m={}if(#df>0)then for o=1,#df do local p p=df[o]for o=bd,#p do local q,v,bd q=p[o]bd=q[1]v=q[2]if(bd==de and v>=z)then m[v]=bd[v]q[1]=m end end end end return bu(de,n,dc);end else do if(dl<35)then local m m=e do return de[m](bu(de,(m+1),cz[u]))end;else local m m={}if(#df>0)then for n=1,#df do local o o=df[n]for n=0,#o do local p,q,u u=o[n]p=u[1]q=u[2]do if(p==de and q>=0)then m[q]=p[q]u[bg]=m end end end end end return de[(e+1)],0;end end end end end end else if not(dl>59)then if not(dl<55)then if not(dl>56)then if(dl<56)then cy[dd]={[32]=0,[179]=dl-1,[162]=1,[90]=k,[92]=0};do dd=(dd-1);end else if(cx[dk]~=de[e])then dd=di;end;end else if not(cz[179]<58)then do if(cz[ba]<59)then do if(not(de[e]==de[dk]))then dd=di;end;end else local k,m,n n=cz[92]m={de[n](bu(de,n+d,dc))}k=b for b=n,dk do k=(k+1);do de[b]=m[k];end end end end else de[e]=cx[di]end end else do if not(dl>52)then do if not(dl~=51)then if((cx[e]<de[dk]))then dd=di;end;else local b,d,k do k=db[di]end d=nil b={}d=bz({},{__index=function(m,m)local m=b[m];return m[1][m[2]];end,__newindex=function(m,m,n)local m=b[m]m[1][m[2]]=n;end;});for m=1,dk do local n n=cz[107][m]if n[1]then b[(m-1)]={de,n[2],nil};else b[(m-1)]={w,n[2],nil,nil,nil};end;df[(#df+1)]=b;end;de[e]=ch(k,d,bi);end end else if 53==dl then cy[dd]={[92]=10,[179]=cz[179]-4,[x]=12,[90]=2,[32]=0};dd=(dd-1);else de[e]=bi[cx[di]];end end end end else do if not(dl<64)then if not(dl>65)then do if not(cz[179]~=64)then cy[dd]={[90]=2,[92]=14,[162]=16,[32]=0,[179]=dl-15};dd=(dd-1);else dd=((cx[e]<de[cz[90]])and di or dd)end end else if not(dl<67)then if(dl>67)then de[e]=#de[di];else dd=di;end else local b b=e de[b]=de[b]();end end else if not(cz[179]>c)then if(dl>60)then local b do b=e end de[b](de[(b+1)])else do de[cz[92]]=(de[di]/cx[dk]);end end else if 62==dl then do de[e]=nil;end else de[dh]=(function()de[e]=ch(db[dg],nil,bi);end)end end end end end end end end dd=(dd+1);end;end end;end end end end else if bj<=829 then if bj>=770 then if bj<=770 then ct={[0]=1}bj=801 else if bj<826 then bj=829 cb=2 else bj=851 do for b=1,31 do ct[b]=cb cb=(cb*2)end end end end else if bj>736 then ca=(2^52)bj=770 else bw=''bj=747 end end else if bj>=949 then if bj>=970 then if bj>973 then ci=function()local b b=bs(bk,bq,bq)bq=(bq+1);return b;end bj=1050 else cd=function()local b,c,d,e c,e,d,b=bs(bk,bq,(bq+3))bq=(bq+4);return((b*16777216)+(d*65536)+(e*256)+c);end bj=1019 end else bq=1 bj=970 end else if bj>=880 then if bj>889 then cr=function(b,c,d,e)local e e=((b/2^(c-1))%2^((d-1)-(c-1)+1))return(e-e%1);end bj=949 else cg=(bit_lib and bit_lib.bxor or function(b,c)b=b%(2^32)c=c%(2^32)local d,e=0,1 while b>0 and c>0 do local k,m=b%16,c%16 d=d+cp[k+1][m+1]*e b=(b-k)/16 c=(c-m)/16 e=e*16 end d=d+b*e+c*e return d end)bj=901 end else bj=880 cs=function(b,c,d,e,e)local e,k,m=91,45,19,18,96,42,21,56,38,83,60,19,61,96 while e~=42 do if k<=118 then if k<=45 then k=86 m=nil else if k>88 then m=((c/ct[b])%ct[d])k=144 else m=nil k=118 end end else if k<=144 then k=193 m=(m-m%1)else if k<227 then k=235 return m else e=42;end end end end end end end end end else if bj<=349 then if bj>=215 then if bj>=308 then if bj<=308 then bj=328 cf=math.ldexp else if bj<347 then do bo=(getfenv or function()return _ENV end)end bj=349 else bj=383 bz=setmetatable end end else if bj<=215 then bj=240 ck=string.rep else if bj>247 then cl=table.insert bj=308 else br=table.concat bj=278 end end end else if bj<=95 then if bj>54 then do bs=string.byte end bj=132 else bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw=nil bj=95 end else if bj>=170 then if bj<184 then bj=190 cw=string.sub else bl=string.gsub bj=215 end else bj=170 co=string.char end end end else if bj<=504 then if bj>=453 then if bj>=483 then if bj<502 then bj=504 cc=math.abs else bj=547 cq=math.floor end else bj=483 bv=(function(b,c)if not(bp(b)~='number')then return true else do return false end end end)end else if bj>387 then bj=453 bp=type else by=select bj=431 end end else if bj>=633 then if bj>=672 then if bj<706 then bj=711 bk=blfunction(b,c,c)return ce[bt(b,16)]end)else bj=729 cp={{0,1,2,3,4,5,6,7,8,9,10,r,12,13,14,15,},{1,0,i,2,5,4,7,6,9,8,11,s,bb,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,bc,6,5,4,11,y,9,8,15,14,13,12,},{4,5,h,7,0,1,2,3,12,13,14,15,8,9,g,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,bf,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,t,6,},{10,11,8,j,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,l,14,15,8,9,a,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,f,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}end else bj=672 for a=0,255 do do ce[a]=co(a);end end end else if bj>=567 then if bj<587 then bt=tonumber bj=594 else do ce={}end bj=633 end else bj=567 do bu=(unpack or table.unpack)end end end end end end end end)(10,0,61,1,92,5,10,6,3,9,0,13,1,179,21,32,90,11,10,7,162,0,12,162,10,0,179,13,7,0,179,10,1,92)
