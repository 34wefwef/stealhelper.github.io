--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bm)local bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da=80,69,79,11,86,95,61,21,44,43,39,70,68,71,25,32,90,43,98,41,62,47,24,87,21,56,84,64,38,87,56,79,14,22,27,21,51,96,88,34,64,88,29,24,32,51,26,40,98,37,35,97,15 while bm~=63 do if bn<=781 then if bn<=393 then if bn<=204 then if bn<=95 then if bn>78 then bn=131 ci=string.byte else bn=95 bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm,cn,co,cp,cq,cr,cs,ct,cu,cv,cw,cx,cy,cz,da=nil end else if bn<=131 then bn=169 bp=string.char else if bn<199 then do bx=string.sub end bn=204 else bn=236 do cl=string.gsub end end end end else if bn>=318 then if bn>=353 then if bn>355 then bn=440 bw=setmetatable else cy=(getfenv or function()return _ENV end)bn=393 end else do cw=math.ldexp end bn=353 end else if bn>=261 then if bn<291 then bn=300 cj=table.concat else bn=318 cg=table.insert end else ce=string.rep bn=261 end end end else if bn<=569 then if bn>=505 then if bn>=532 then if bn>537 then ct=math.floor bn=600 else cb=math.abs bn=569 end else do ca=(function(bx,cb,cb,cb)do if'number'==cz(bx)then do return true end else return false end end end)end bn=532 end else if bn>443 then bn=505 cz=type else bn=486 bz=select end end else if bn>=731 then if bn<=731 then do for bx=bi,255 do co[bx]=bp(bx);end end bn=762 else if bn<775 then bn=781 cu=cl('','..',function(bi,bp,bp)return co[cv(bi,bf)]end)else bn=810 bs={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,y,8,11,10,13,12,15,14,},{2,3,0,1,6,7,bh,5,10,bb,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,q,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,u,10,11,},{5,4,7,6,p,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,o,1,14,15,b,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,bd,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,n,3,2,1,0,7,6,5,4,},{12,13,14,15,f,9,l,11,4,5,6,7,0,bc,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,r,},{14,15,12,13,10,11,8,9,6,7,4,5,bk,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end end else if bn>=635 then if bn>638 then co={}bn=731 else cv=tonumber bn=684 end else cx=(unpack or table.unpack)bn=635 end end end end else if bn>=1179 then if bn<=1300 then if bn>=1265 then if bn<=1265 then bn=1284 cm=function(b,b)local b,f,l,n=93,60,25,35,90,83,15,12,52,59,31,79,99,53 while b~=44 do if f>=184 then if f<=184 then f=225 cp=(cp+l);else if f<261 then f=266 return n;else b=44;end end else if f<=60 then l,n=nil f=93 else if f<132 then l=cr()f=140 else f=184 n=cu:sub(cp,(cp+l-1))end end end end end else if bn>1293 then bn=1326 da={}else bn=1300 bq=function(...)return{...},bz('#',...)end end end else if bn>1188 then cd=function()local b,f,l,n,o,p,q,r=86,52,11,14,46,57,35,22,92,25,83,39,72,11,17,24,96,76 while b~=38 do if f<=160 then if f<=81 then if f>54 then r=cr()f=96 else f=81 l,n,o,p,q,r=nil end else if f>=130 then if f<156 then f=160 do if((r==0 and o==0))then return 0 end end else l=((-1)^ck(31,o,1))f=182 end else o=cr()f=130 end end else if f<=247 then if f<=182 then n=ck(20,o,11)f=215 else if f<244 then q=(ck(0,o,20)*4294967296+r)f=247 else f=273 p=1 end end else if f>=298 then if f>303 then break else f=324 return(l*(h^(n-1023))*(q/ch+p))end else do if not(n~=0)then do if 0~=q then n=1 p=0 else return(l*0)end end elseif 2047~=n then else if 0==q then do return(l*(0/0))end else return(l*(1/0))end end end f=298 end end end end end bn=1265 else cf=function()local b,f b,f=ci(cu,cp,(cp+2))cp=(cp+2);return((f*e)+b);end bn=1226 end end else if bn<=1375 then if bn>=1354 then if bn<1373 then br={}bn=1375 else bn=1390 do cn={}end end else bn=1354 do bu=function(b,e,e)local e,f,h,l,n,o,p,q=65,75,39,61,25,84,20,69,93,91,79,22,85,67,62,91,67,47,39,43,47,70,15,35 while e~=50 do if f<=310 then if f<=179 then if f>=151 then if f<170 then f=179 n={}else f=204 h={}end else if f>81 then f=151 l={}else f=114 h,l,n,o,p,q=nil end end else if f<=238 then if f>213 then f=273 do for r=(#da+1),(#da+o)do local u,y,bb,bc,bd=54,74,18,62,13,66,54,22,36,41,65,98,13,89,40,81,26,48,52,31,31,74,15 while u~=35 do if y>=323 then if y<=408 then if y>=386 then if y>388 then y=451 do bb[86]=cq(bc,12,33);end else y=408 bb[189]=cq(bd,21,29);end else if y>327 then y=386 bb[145]=cq(bd,12,20);else y=344 bb[56]=cq(bd,3,11);end end else if y>=522 then if y>529 then break else y=558 da[r]=bb;end else if y<473 then bb[102]=-bb[56]y=477 else bb[199]=-bb[189]y=522 end end end else if y<=142 then if y<=96 then if y<87 then bb,bc,bd=nil y=96 else bb={}y=116 end else if y>121 then bd=cr()y=157 else bb[142]=cc();y=142 end end else if y<=200 then if y>166 then y=248 bb[107]=cc();else y=200 bc=cr()end else if y<282 then y=290 do bb[79]=cq(bd,1,2);end else bb[119]=cq(bc,1,11);y=323 end end end end end end end else do o=cr()end f=238 end else if f>277 then h[176]=l;f=341 else do for o=1,cr()do local r,u,y,bb,bc,bd=93,51,40,41,83,44,30,39,94,52,88,69,79,73,68,60,23,89,52,46,92,97,42,17 while r~=48 do if u<=306 then if u<=149 then if u<=85 then if u>55 then u=118 bb={{},nil}else y,bb,bc,bd=nil u=85 end else if u>123 then bb[165]={};u=178 else u=149 bb[142]=cc();end end else if u>=232 then if u>=271 then if u<301 then bc=cq(bd,1,2)u=306 else u=345 bb[79]=bc end else u=271 y=cr()end else if u<205 then u=212 if 1==cc()then for bc=1,cc()do do bb[165][bc]={cc()==0,cr()}end end end else u=232 bd=cr()end end end else if u>=499 then if u<=538 then if u<533 then u=538 bb[107]=cq(bd,12,20);else u=581 do bb[102]=-bb[56]end end else if u<=581 then bb[199]=-bb[189]u=622 else if u>628 then r=48;else u=639 l[o]=bb;end end end else if u>=425 then if u>429 then bb[189]=cq(bd,21,29);u=499 else do bb[86]=cq(y,12,33);end u=452 end else if u>354 then u=425 bb[56]=cq(bd,i,11);else bb[119]=cq(y,1,11);u=386 end end end end end end end f=310 end end end else if f<=445 then if f>=423 then if f<443 then f=445 h[15]=cc();else f=470 do q=cr()end end else if f>344 then h[185]=n;f=423 else for i=1,cr()do do n[i-1]=bu();end end f=380 end end else if f<=502 then if f<498 then f=502 p={}else do for i=1,q do local l,n,o,q=48,31,17,10,94,25,59,12,46,13,12,40 while l~=27 do if n<=72 then if n<=31 then o,q=nil n=57 else if n>62 then do o=nil end n=118 else n=72 q=cc()end end else if n<=118 then if(not(q~=3))then do o=(not(cc()==g));end elseif(1==q)then do o=cd();end elseif(not(q~=2))then o=cm();elseif(4==q)then o=b[cm()];end;n=151 else if n<164 then n=167 do p[i]=o;end else l=27;end end end end end end f=541 end else if f>=584 then if f>591 then e=50;else f=609 return h;end else h[179]=p f=584 end end end end end end end end else if bn>=1411 then if bn>1415 then bm=63;else bn=1446 do return bt(bu(cy()),{},cy())();end end else bn=1411 bt=function(b,e,f,g)local g,h,i,l,n g=b[185]h=b[179]n=b[15]l=br i=b[176]return function(...)local b,l,o,p,q,r,u,y,bb q=1 do l=-1 end do y=-1 end bb={}r={...}u=(bz('#',...)-1)do o={}end do p={}end for y=0,u do if(not(y<n))then bb[(y-n)]=r[(y+1)];else p[y]=r[(y+1)];end;end;b=(u-n+1)do while true do local b,n,r,u,y,bb,bc,bd,bf,bh do u=i[q]end n=u[119]bc=u[m]bf=u[56]bb=u[145]y=u[189]r=u[107]bd=u[102]bh=u[86]b=u[199]if not(n>32)then if not(n<16)then if not(n<24)then do if not(n>27)then if not(n>25)then if 24==n then local m m=u[56]do p[m](cx(p,(m+1),bh))end else do p[u[56]]=p[bh][p[y]];end end else if(n>26)then p[u[56]]=(p[u[86]]+h[y]);elseif(not(p[bf]~=h[u[189]]))then q=bh;end end else if not(n<30)then if not(n<31)then if not(n~=31)then p[bf]=h[bh]else local m do m=u[56]end p[m](p[(m+1)])end else if p[u[56]]then q=bh;end;end else if(n>28)then p[b]=(function()p[u[56]]=bt(g[bb],nil,f);end)else local b,m,bb b=bf do bb=p[b]end m=p[(b+2)]if((m>0))then if((bb>p[b+1]))then q=bh;else p[(b+3)]=bb;end elseif((bb<p[b+1]))then q=bh;else p[(b+3)]=bb;end end end end end else do if not(n<20)then do if not(n>d)then if not(n~=20)then do i[q]={[119]=n- -19,[107]=0,[86]=1,[56]=1,[189]=0};end q=(q-1);else i[q]={[107]=0,[119]=n-15,[86]=16,[56]=14,[189]=2};q=(q-1);end else if(n>22)then q=u[86];else i[q]={[189]=0,[56]=11,[119]=u[119]- -43,[107]=0,[86]=26};q=(q-1);end end end else if not(n<18)then if not(n~=v)then local b,d d=bf b={}do if(#o>0)then for m=1,#o do local v v=o[m]do for m=0,#v do local bb,bc,bd bc=v[m]bb=bc[1]bd=bc[2]if(bb==p and bd>=0)then b[bd]=bb[bd]do bc[k]=b end end end end end end end return cx(p,d,l);else do q=((h[u[56]]==h[y])and bh or q)end end else do if not(n~=16)then p[bf]=#p[bh];else i[q]={[107]=0,[119]=n-13,[be]=5,[189]=10,[56]=5};q=(q-1);end end end end end end else if not(n<8)then do if not(n<12)then if not(u[119]<14)then if not(n~=14)then if((p[u[56]]<p[y]))then q=bh;end;else p[u[56]]=p[bh];end else if(n<13)then do p[bf]=(p[bh]%h[u[bg]]);end else p[bf]={};end end else if not(n>9)then do if c==u[119]then local b b={}do while(#o>0)do for c=1,#o do local c=o[c]for d=0,#c do local c=c[d]local a=c[a]local d=c[2]if a==p and d>=0 then b[d]=a[d]c[1]=b end end end break end end return u[119],1;else local a a=u[56]p[a]=p[a](p[a+1]);end end else if(u[119]>10)then do return p[bf]end else p[bf]=(p[bh]*h[y]);end end end end else if not(n>3)then if not(n>w)then if 0==n then if(p[y]~=p[bf])then do q=bh;end end;else p[bf]=(p[bh]-p[u[189]]);end else if(n>2)then do i[q]={[86]=17,[189]=73,[56]=14,[119]=n- -28,[107]=0};end q=(q-1);else p[bf][h[bh]]=h[u[189]];end end else if not(u[119]<6)then if(n>6)then i[q]={[189]=27,[119]=n-5,[86]=64,[107]=0,[56]=bl};q=(q-1);else local a do a=u[56]end do p[a]=p[a](cx(p,a+1,bh));end end else if(n>4)then do p[bf][h[bh]]=p[y];end else local a,b do a=bf end b=p[bh]p[(a+1)]=b;p[a]=b[h[y]];end end end end end else if not(u[ba]<50)then if not(n<58)then if not(n>61)then if not(n<60)then if(n>60)then local a,b,c,d b=bf a,c=bq(p[b](p[(b+1)]))l=(c+b-1)do d=0 end do for c=b,l do d=(d+1);do p[c]=a[d];end end;end else h=br[bf](h)end else if not(u[119]~=58)then local a,b b=bh a=p[b]do for c=(b+1),u[x]do a=(a..p[c]);end;end do p[bf]=a;end else local a,b,c c=bf do a=p[(c+2)]end b=(p[c]+a)p[c]=b;if((a>0))then if(not(b>p[c+1]))then q=bh;p[(c+3)]=b;end elseif(not(b<p[c+1]))then do q=bh;end p[(c+3)]=b;end end end else if not(n>63)then if(n<63)then local a a=bf p[a]=p[a]();else if(h[y]~=p[bf])then q=bh;end;end else if not(n>64)then for a=bf,bh do p[a]=nil;end;else if(n<66)then do p[bf]=f[h[bh]];end else p[bf]=bt(g[u[86]],nil,f);end end end end else if not(n<54)then do if not(n<56)then do if(n>56)then local a,b,c b=g[bh]a=nil c={}a=bw({},{__index=function(d,d)local d=c[d];return d[1][d[2]];end,__newindex=function(d,d,g)local d=c[d]d[1][d[2]]=g;end;});for d=1,y do local g do g=u[165][d]end if g[1]then c[(d-1)]={p,g[2],nil};else do c[(d-1)]={e,g[2],nil,nil};end end;o[(#o+1)]=c;end;p[bf]=bt(b,a,f);else while((p[bf]<h[y]))do q=u[86];break end end end else do if(n>54)then q=((h[bf]<p[y])and bh or q)else i[q]={[56]=15,[107]=0,[86]=18,[119]=n-48,[189]=2};q=(q-1);end end end end else do if not(u[119]<52)then do if 52==u[119]then p[bf]=(not(bh==0));else p[bf]();end end else if(n>50)then local a,b,c,d,f a=u[56]do b=y end do c=(a+2)end f={p[a](p[a+1],p[c])}for g=1,b do p[(c+g)]=f[g]end d=p[(a+3)]do if d then p[c]=d else q=bh;end;end else local a,b,c b=bf do c={p[b](cx(p,b+z,l))}end a=0 for d=b,u[189]do a=(a+1);p[d]=c[a];end end end end end end else if not(n>40)then if not(n<37)then if not(n<39)then do if(n<40)then e[u[86]]=p[bf];else p[bf]=(p[u[86]]*p[y]);end end else do if(n>j)then if((h[bf]<p[y]))then q=bh;end;else i[q]=da[r];q=bh;end end end else do if not(n>34)then if not(n~=33)then p[bf]=p[bh][h[y]];else i[q]={[119]=u[119]-29,[86]=61,[189]=13,[107]=0,[56]=12};q=(q-1);end else if(n>35)then local a,b,c,d a=bf do b,c=bq(p[a](cx(p,(a+1),u[86])))end l=(c+a-bj)d=0 do for c=a,l do d=(d+1);p[c]=b[d];end;end else do p[bf][p[bh]]=p[y];end end end end end else if not(n>44)then if not(n<43)then if 43==n then local a a=u[56]do do return p[a](cx(p,(a+1),bh))end end;else p[bf]=nil;end else if(n>41)then while(not p[bf])do q=bh;break end else local a a=u[56]do p[a]=p[a](cx(p,a+1,l));end end end else if not(n<47)then if not(n<48)then do if(n>48)then p[bf]=(p[bh]/h[u[189]]);else p[bf]=e[bh];end end else do i[q]={[119]=n-14,[107]=0,[56]=15,[189]=83,[86]=15};end q=(q-1);end else if(n>45)then p[bf]=(p[bh]+p[y]);else q=((p[bf]<p[y])and u[86]or q)end end end end end end q=(q+1);end;end end;end end end end else if bn>=981 then if bn<=1043 then if bn>=997 then if bn>999 then bn=1061 cq=function(a,b,c,d,d,d)local d d=((a/2^(b-1))%2^((c-1)-(b-1)+1))return(d-d%s);end else do by=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+bs[e+1][f+1]*d a=(a-e)/16 b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)end bn=1043 end else do ck=function(a,b,c,d)local d,e,f=61,61,20,42,48,68,69,18,27,14,22,89,95,91,13 while d~=35 do if e<=133 then if e>=104 then if e<125 then e=133 f=nil else f=((b/cs[a])%cs[c])e=178 end else e=104 f=nil end else if e>=193 then if e>197 then break else e=220 return f end else e=193 do f=(f-f%1)end end end end end end bn=997 end else if bn<=1061 then bn=1093 do cp=1 end else if bn<1135 then bn=1139 cr=function()local a,b,c,d do d,b,c,a=ci(cu,cp,(cp+3))end cp=(cp+4);do return((a*16777216)+(c*65536)+(b*256)+d);end end else bn=1179 cc=function()local a a=ci(cu,cp,cp)cp=(cp+1);return a;end end end end else if bn>=863 then if bn<=863 then bn=910 cs={[t]=1}else if bn<936 then bn=945 do bo=2 end else for a=1,31 do cs[a]=bo bo=(bo*2)end bn=981 end end else if bn<837 then do bv=''end bn=839 else bn=863 ch=(2^52)end end end end end end end)(1,12,8,21,256,8,0,2,3,37,1,10,142,12,0,1,9,2,1,0,9,18,1,189,9,1,119,11,1,13,86,16,189,4,0,1,2,12)
